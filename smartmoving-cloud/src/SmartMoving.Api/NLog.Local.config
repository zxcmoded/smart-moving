<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
			xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      throwExceptions="true">
	<extensions>
		<add assembly="Microsoft.ApplicationInsights.NLogTarget" />
	</extensions>
	<targets async="true">
		<target xsi:type="Null" name="devnull" />

		<target xsi:type="ApplicationInsightsTarget" name="aiTarget">
			<instrumentationKey>9d3a23ed-bcfc-433f-91fb-990d38588741</instrumentationKey>
			<contextproperty name="Username" layout="${aspnet-user-identity}" />
		</target>

		<target xsi:type="File"
			name="file"
			layout="${level:uppercase=true} ${longdate} ${logger} ${message} ${newline}${exception:format=ToString}${newline}"
			fileName="${basedir}/logs/log.txt"
			archiveFileName="${basedir}/logs/archives/log.{#####}.txt"
			archiveDateFormat="yyyy-MM-dd"
			archiveNumbering="DateAndSequence"
			maxArchiveFiles="14"
			archiveEvery="Day"
			concurrentWrites="false"
			keepFileOpen="false" />

		<target xsi:type="Database" name="LoggingDatabase">
			<commandText>
				INSERT INTO Logging.ApplicationLogs (
				[RequestID]
				,[SessionID]
				,[Host]
				,[Url]
				,[Source]
				,[Type]
				,[Message]
				,[StackTrace]
				,[UserName]
				) VALUES (@requestid, @sessionid, @host, @url, @source, @type, @message, @stacktrace, @username);
			</commandText>

			<!--  
				LayoutRenders for NLog:  https://github.com/nlog/NLog/wiki/Layout-Renderers
				Good list of Server Variables:   http://www.w3schools.com/asp/coll_servervariables.asp
			-->
		
			<!--<parameter name="@requestid" layout="${aspnet-item:variable=HeroicApp_RequestId}" />-->
			<parameter name="@requestid" layout="n/a" />
			<parameter name="@host" layout="${machinename}"/>
			<parameter name="@type" layout="${level}"/>
			<parameter name="@source" layout="${callsite:className=true:fileName=false:includeSourcePath=false:methodName=true}"/>
			<parameter name="@sessionid" layout="n/a"/>
			<parameter name="@url" layout="${aspnet-request:serverVariable=HTTP_URL}"/>
			<parameter name="@stacktrace" layout="${stacktrace:format=Flat}"/>
			<parameter name="@message" layout="${message}${newline}${exception:format=ToString}"/>
			<parameter name="@username" layout="${aspnet-user-identity}"/>
		</target>

		<target name="Console" xsi:type="Console" layout="${level:uppercase=true} ${longdate} ${logger} ${message} ${newline}"/>
	</targets>

	<rules>
		<!-- Skip non-critical Microsoft logs -->
		<logger name="Microsoft.*" maxLevel="Info" final="true" /> <!-- BlackHole without writeTo -->

		<logger name="Microsoft.AspNetCore.Identity.UserManager" maxLevel="Warn" final="true" />
		<logger name="Microsoft.AspNetCore.Identity.SignInManager" maxLevel="Warn" final="true" />

		<!-- https://github.com/NLog/NLog/wiki/When-filter -->
		<!-- https://github.com/NLog/NLog/wiki/WhenRepeated-Filter -->

		<!-- Default to only show each message once a minute. Explicitly don't show the "request body timed out" (handled below) -->
		<logger name="*" minLevel="Warn" writeTo="Console">
			<filters defaultAction="Log">
				<when condition="contains('${message}', 'Reading the request body timed out due to data arriving too slowly')" action="Ignore" />
				<whenRepeated layout="${message}" timeoutSeconds="60" FilterCountMessageAppendFormat=" (Hits: {0})" action="Ignore"/>
			</filters>
		</logger>

		<!-- Only log "request body timed out" if it occurs more than once in a ten second window -->
		<logger name="*" minLevel="Warn" writeTo="Console">
			<filters defaultAction="Log">
				<when condition="not contains('${message}', 'Reading the request body timed out due to data arriving too slowly')" action="Ignore" />
				<whenRepeated layout="${message}" timeoutSeconds="10" FilterCountMessageAppendFormat=" (Hits: {0})" action="Ignore" includeFirst="true"/>
			</filters>
		</logger>

		<logger name="*" minlevel="Info" writeTo="LoggingDatabase" />
		<!-- <logger name="*" minlevel="Info" writeTo="Console" /> -->
		<logger name="*" minlevel="Debug" writeTo="file" />
	</rules>
</nlog>